# base-image for python on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/
#FROM balenalib/%%BALENA_MACHINE_NAME%%-python:3-buster
FROM balenalib/%%BALENA_MACHINE_NAME%%-python:bullseye

# expose custom port for jupyterlab and set UDEV to 1
EXPOSE 8081
ENV UDEV=1

# Copy requirements.txt first for better cache on later pushes
COPY requirements.txt requirements.txt

# pip install deps and requirements.txt on the balena.io build server
RUN  pip install --upgrade pip
RUN  apt-get update && \
     apt-get -y upgrade && \
     apt-get install -y -q sudo curl

RUN  apt-get install -y build-essential libffi-dev python3-gpiozero
RUN  install_packages libcamera-dev libcamera-apps-lite python3 v4l-utils

# For importing another ipynb into current ipynb (used by spectroscope)
RUN  pip install import_ipynb 

# For LED projects to address individual leds
RUN  pip install rpi_ws281x adafruit-circuitpython-neopixel

# Add RUST to linux for memory management etc.
RUN  curl https://sh.rustup.rs -sSf | sh -s -- -y
# Add .cargo/bin to PATH
ENV  PATH="/root/.cargo/bin:${PATH}"
# Check cargo rustc is visible
RUN  cargo --version
RUN  rustc --version

# install jupyterlab
RUN  pip3 install --no-cache-dir jupyterlab 
RUN  pip3 install jupyterlab-mathjax3

# Set env for RPIO
RUN  pip install -r requirements.txt

# This will copy all files in our root to the working  directory in the container
COPY . ./

# start command for server
RUN chmod -R 765 *.sh

CMD ["bash", "entrypoint.sh"]
